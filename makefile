#for libdivsufsort,  cmake -DCMAKE_BUILD_TYPE="Release" -DCMAKE_INSTALL_PREFIX="../../lib" .. -DBUILD_DIVSUFSORT64:BOOL=ON

#when calling, allow for setting the DESTDIR env variable
#when calling, allow for the #DONT_INSTALL_DIVSUFSORT env variable
#todo: documentation for calling git clone with --recurse-submodules or use git submodule init & git submodule update
SHELL = /bin/sh

AWFMINDEX_PROJECT_NAME 			= awfmindex
AWFMINDEX_MAJOR_VERSION_NUM = 0
AWFMINDEX_MINOR_VERSION_NUM = 1
AWFMINDEX_VERSION 					= $(MAJOR).$(MINOR)

CC 			= gcc
CFLAGS 	= -std=gnu11 -fpic -O3 -mtune=native -mavx2 -Wall -Werror -Wextra -fopenmp -ldivsufsort64
LDFLAGS	= -shared # linking flags


#PREFIX is environment variable, but if it is not set, then set default install location /usr/local
ifeq ($(PREFIX),)
    PREFIX := /usr/local
endif

#directories
AWFMINDEX_PROJECT_DIR						:= $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
AWFMINDEX_BUILD_DIR 						= $(AWFMINDEX_PROJECT_DIR)/build
AWFMINDEX_SRC_DIR 							= $(AWFMINDEX_PROJECT_DIR)/src
AWFMINDEX_BUILD_INCLUDE_DIR			= $(AWFMINDEX_BUILD_DIR)/include
AWFMINDEX_BUILD_LIBRARY_DIR			= $(AWFMINDEX_BUILD_DIR)/lib
AWFMINDEX_INSTALL_INCLUDE_DIR		= $(DESTDIR)$(PREFIX)/include
AWFMINDEX_INSTALL_LIBRARY_DIR		= $(DESTDIR)$(PREFIX)/lib
LIBDIVSUFSORT_PROJECT_DIR				= $(AWFMINDEX_PROJECT_DIR)/libdivsufsort
LIBDIVSUFSORT_BUILD_DIR					= $(LIBDIVSUFSORT_PROJECT_DIR)/build
LIBDIVSUFSORT_BUILD_INCLUDE_DIR	= $(LIBDIVSUFSORT_BUILD_DIR)/include
LIBDIVSUFSORT_BUILD_LIBRARY_DIR = $(LIBDIVSUFSORT_BUILD_DIR)/lib

#filenames
AWFMINDEX_HEADER_FILENAME					= AwFmIndex.h
AWFMINDEX_LIBRARY_FILENAME				= libawfmindex.so
AWFMINDEX_STATIC_LIB_FILENAME			=	libawfmindex.a
LIBDIVSUFSORT_HEADER_FILENAME			=	divsufsort64.h
LIBDIVSUFSORT_LIBRARY_FILENAME		= libdivsufsort64.so
LIBDIVSUFSORT_STATIC_LIB_FILENAME = libdivsufsort64.a

#file locations
AWFMINDEX_SRC_HEADER_FILE 				= $(AWFMINDEX_SRC_DIR)/$(AWFMINDEX_HEADER_FILENAME)
AWFMINDEX_BUILD_HEADER_FILE				= $(AWFMINDEX_BUILD_INCLUDE_DIR)/$(AWFMINDEX_HEADER_FILENAME)
AWFMINDEX_BUILD_LIBRARY_FILE			= $(AWFMINDEX_BUILD_LIBRARY_DIR)/$(AWFMINDEX_LIBRARY_FILENAME)
AWFMINDEX_INSTALL_HEADER_FILE			= $(AWFMINDEX_INSTALL_INCLUDE_DIR)/$(AWFMINDEX_HEADER_FILENAME)
AWFMINDEX_INSTALL_LIBRARY_FILE		= $(AWFMINDEX_INSTALL_LIBRARY_DIR)/$(AWFMINDEX_LIBRARY_FILENAME)
LIBDIVSUFSORT_BUILD_HEADER_FILE		= $(LIBDIVSUFSORT_BUILD_INCLUDE_DIR)/$(LIBDIVSUFSORT_HEADER_FILENAME)
LIBDIVSUFSORT_LIB_INCLUDE_FILE		= $(LIBDIVSUFSORT_PROJECT_DIR)/lib/include/divsufsort64.h
LIBDIVSUFSORT_BUILD_LIBRARY_FILE	= $(LIBDIVSUFSORT_BUILD_LIBRARY_DIR)/$(LIBDIVSUFSORT_LIBRARY_FILENAME)
#static libs
AWFMINDEX_STATIC_LIB_BUILD_SRC			= $(AWFMINDEX_BUILD_DIR)/$(AWFMINDEX_STATIC_LIB_FILENAME)
AWFMINDEX_STATIC_LIB_DEST_SRC				= $(AWFMINDEX_INSTALL_LIBRARY_DIR)/$(AWFMINDEX_STATIC_LIB_FILENAME)
LIBDIVSUFSORT_STATIC_LIB_BUILD_SRC 	= $(LIBDIVSUFSORT_PROJECT_DIR)/build/lib/$(LIBDIVSUFSORT_STATIC_LIB_FILENAME)
LIBDIVSUFSORT_STATIC_LIB_DEST_SRC 	= $(AWFMINDEX_INSTALL_LIBRARY_DIR)/$(LIBDIVSUFSORT_STATIC_LIB_FILENAME)


SOURCE_FILES 	:= $(wildcard $(AWFMINDEX_SRC_DIR)/*.c)
OBJECT_FILES 	:= $(patsubst $(AWFMINDEX_SRC_DIR)/%, $(AWFMINDEX_BUILD_DIR)/%, $(SOURCE_FILES:.c=.o))


#create a variable to hold the libs to install, to make rule generation easier
LIBS_TO_INSTALL = $(AW_FM_INDEX_SO_FILE)
ifneq ($(DONT_INSTALL_DIVSUFSORT),)
	$(LIBS_TO_INSTALL) += $(LIBDIVSUFSORT_SO_FILE)
endif



#rules
.PHONY: all
all: $(LIBDIVSUFSORT_BUILD_HEADER_FILE) $(AWFMINDEX_BUILD_LIBRARY_FILE) $(AWFMINDEX_BUILD_HEADER_FILE)


.PHONY: install
install: $(AWFMINDEX_BUILD_LIBRARY_FILE) $(AWFMINDEX_BUILD_HEADER_FILE)
	echo "install"
	mkdir -p $(DESTDIR)$(PREFIX)/lib
	mkdir -p $(DESTDIR)$(PREFIX)/include
	cp $(AWFMINDEX_BUILD_LIBRARY_FILE) $(AWFMINDEX_INSTALL_LIBRARY_FILE)
	cp $(AWFMINDEX_BUILD_HEADER_FILE) $(AWFMINDEX_INSTALL_HEADER_FILE)
	#cd into libdivsufsort to make install
	cd $(LIBDIVSUFSORT_BUILD_DIR) && cmake -DCMAKE_BUILD_TYPE="Release" -DBUILD_DIVSUFSORT64:BOOL=ON  -DCMAKE_INSTALL_PREFIX="$(PREFIX)" .. && make install


#make the static libs
.PHONY: static
static: $(LIBDIVSUFSORT_PROJECT_DIR) $(AWFMINDEX_BUILD_LIBRARY_DIR) $(LIBDIVSUFSORT_STATIC_LIB_BUILD_SRC) $(OBJECT_FILES)
	ar rcs $(AWFMINDEX_STATIC_LIB_BUILD_SRC) $(OBJECT_FILES)


clean:
	echo "clean"
	rm -rf $(AWFMINDEX_BUILD_DIR) #clean the AwFmIndex build files
	rm -rf $(LIBDIVSUFSORT_STATIC_LIB_DEST_SRC)
	rm -rf $(AWFMINDEX_STATIC_LIB_DEST_SRC)
	if [ -d $(LIBDIVSUFSORT_BUILD_DIR) ]; then cd $(LIBDIVSUFSORT_BUILD_DIR) && make clean; fi

.PHONY: uninstall
uninstall:
	rm -rf  $(AWFMINDEX_INSTALL_LIBRARY_FILE)
	rm -rf $(AWFMINDEX_INSTALL_HEADER_FILE)
	rm -rf $(AWFMINDEX_STATIC_LIB_DEST_SRC)
	rm -rf $(LIBDIVSUFSORT_STATIC_LIB_DEST_SRC)
	cd $(LIBDIVSUFSORT_BUILD_DIR) && cmake -DCMAKE_BUILD_TYPE="Release" -DBUILD_DIVSUFSORT64:BOOL=ON  -DCMAKE_INSTALL_PREFIX="$(PREFIX)" .. && make uninstall

#build the .so and place it in the build lib directory
$(AWFMINDEX_BUILD_LIBRARY_FILE): $(LIBDIVSUFSORT_BUILD_INCLUDE_DIR) $(AWFMINDEX_BUILD_LIBRARY_DIR) $(OBJECT_FILES)
	$(CC) $(LDFLAGS) -o $(AWFMINDEX_BUILD_LIBRARY_FILE) $(OBJECT_FILES)

#create the object files from each c file in the src directory
$(AWFMINDEX_BUILD_DIR)/%.o: $(AWFMINDEX_SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@ -I $(LIBDIVSUFSORT_BUILD_INCLUDE_DIR)

#copies the AwFmIndex.h header to the build directory
$(AWFMINDEX_BUILD_HEADER_FILE): $(AWFMINDEX_SRC_HEADER_FILE) $(AWFMINDEX_BUILD_INCLUDE_DIR)
	cp $(AWFMINDEX_SRC_HEADER_FILE) $(AWFMINDEX_BUILD_HEADER_FILE)

#building libdivsufsort
$(LIBDIVSUFSORT_BUILD_HEADER_FILE): $(LIBDIVSUFSORT_BUILD_DIR)
	cd $(LIBDIVSUFSORT_BUILD_DIR) &&	cmake -DCMAKE_BUILD_TYPE="Release" -DUSE_OPENMP="ON" -DBUILD_DIVSUFSORT64:BOOL=ON  -DCMAKE_INSTALL_PREFIX="$(PREFIX)" .. && make

#initialize the libdivsufsort project submodule if not already done
$(LIBDIVSUFSORT_PROJECT_DIR)/.git:
	echo "git --rescursive not used, automatically initializing submodules..."
	git submodule update

#make the libdivsufsort build directory if not already done
$(LIBDIVSUFSORT_BUILD_DIR): $(LIBDIVSUFSORT_PROJECT_DIR)/.git
	mkdir -p $(LIBDIVSUFSORT_BUILD_DIR)

#make the AwFmIndex build lib directory
$(AWFMINDEX_BUILD_LIBRARY_DIR):
	mkdir -p $(AWFMINDEX_BUILD_LIBRARY_DIR)

#make the AwFmIndex build include directory
$(AWFMINDEX_BUILD_INCLUDE_DIR):
	mkdir -p $(AWFMINDEX_BUILD_INCLUDE_DIR)

$(LIBDIVSUFSORT_STATIC_LIB_BUILD_SRC): $(LIBDIVSUFSORT_BUILD_DIR)
	cd $(LIBDIVSUFSORT_BUILD_DIR) && cmake -DCMAKE_BUILD_TYPE="Release" -DUSE_OPENMP="ON" -DBUILD_SHARED_LIBS="OFF" -DBUILD_DIVSUFSORT64:BOOL=ON  -DCMAKE_INSTALL_PREFIX="$(PREFIX)" ..
